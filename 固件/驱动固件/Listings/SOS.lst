C51 COMPILER V9.60.0.0   SOS                                                               04/29/2025 17:16:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SOS
OBJECT MODULE PLACED IN .\Objects\SOS.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Logic\SOS.c OMF2 OPTIMIZE(9,SPEED) BROWSE MODDP2 INCDIR(.\StdDriver\inc;
                    -.\Hardware;.\include\Hardware;.\include\Logic;.\include\Middleware;.\include\System) DEFINE(EnableStdGPIO) DEBUG PRINT(.
                    -\Listings\SOS.lst) TABS(2) OBJECT(.\Objects\SOS.obj)

line level    source

   1          #include "ModeControl.h"
   2          #include "SOS.h"
   3          
   4          //状态位
   5          static xdata SOSStateDef SOSState; //全局变量状态位
   6          static xdata char SOSTIM;  //SOS计时
   7          
   8          //SOS状态机的跳转处理
   9          static void SOSFSM_Jump(SOSStateDef State,char Time)
  10          {
  11   1        if(SOSTIM)return; //显示未结束
  12   1        SOSTIM=Time; 
  13   1        SOSState=State;  //进入延时等待阶段
  14   1      }
  15          
  16          //SOS状态机的时序处理
  17          void SOSTIMHandler(void)
  18          {
  19   1        //对计时器数值进行递减
  20   1        if(SOSTIM>0)SOSTIM--;
  21   1      }
  22          
  23          //复位整个SOS模块
  24          void ResetSOSModule(void)
  25          {
  26   1        SOSState=SOSState_Prepare;
  27   1        SOSTIM=0;
  28   1      }
  29          //SOS定时器状态监测
  30          static bit SOSTIMDetect(char Time)
  31          {
  32   1      //触发定时判断
  33   1      if((SOSTIM%(Time*2))>(Time-1))return 1;
  34   1      //关闭状态返回0
  35   1      return 0;
  36   1      }
  37          
  38          //SOS状态机处理模块
  39          char SOSFSM(void)
  40          {
  41   1        switch(SOSState)
  42   1          {
  43   2          //准备阶段
  44   2          case SOSState_Prepare:
  45   2             SOSTIM=0;
  46   2             SOSFSM_Jump(SOSState_3Dot,(3*SOSDotTime*2)-1);
  47   2             break;
  48   2          //第一和第二次三点
  49   2          case SOSState_3DotAgain:
  50   2          case SOSState_3Dot:
  51   2             if(SOSTIMDetect(SOSDotTime))return 1; //当前状态需要LED电流，返回1
  52   2             if(SOSState==SOSState_3Dot)SOSFSM_Jump(SOSState_3DotWait,SOSGapTime);  //进入延时等待阶段
  53   2             else SOSFSM_Jump(SOSState_Wait,SOSFinishGapTime);//进入延时等待阶段
C51 COMPILER V9.60.0.0   SOS                                                               04/29/2025 17:16:20 PAGE 2   

  54   2             break;
  55   2          //三点结束后的等待延时阶段
  56   2          case SOSState_3DotWait:
  57   2             SOSFSM_Jump(SOSState_3Dash,(3*SOSDashTime*2)-1);
  58   2             break;
  59   2          //三划
  60   2          case SOSState_3Dash:
  61   2             if(SOSTIMDetect(SOSDashTime))return 1; //当前状态需要LED电流，返回1  
  62   2             SOSFSM_Jump(SOSState_3DashWait,SOSGapTime);
  63   2             break;     
  64   2          //三划结束后的等待延时阶段
  65   2          case SOSState_3DashWait:
  66   2             SOSFSM_Jump(SOSState_3DotAgain,(3*SOSDotTime*2)-1);
  67   2             break;   
  68   2          //本轮信号发出完毕，等待
  69   2          case SOSState_Wait: 
  70   2             SOSFSM_Jump(SOSState_Prepare,0);//回到准备状态
  71   2             break;
  72   2          }
  73   1        //其余情况返回0关闭防反接，确保尾按可以正确响应
  74   1        return 0;
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

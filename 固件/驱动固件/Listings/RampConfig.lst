C51 COMPILER V9.60.0.0   RAMPCONFIG                                                        04/05/2025 19:57:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RAMPCONFIG
OBJECT MODULE PLACED IN .\Objects\RampConfig.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Logic\RampConfig.c OMF2 OPTIMIZE(9,SPEED) BROWSE MODDP2 INCDIR(.\include
                    -;.\StdDriver\inc;.\Hardware) DEBUG PRINT(.\Listings\RampConfig.lst) TABS(2) OBJECT(.\Objects\RampConfig.obj)

line level    source

   1          #include "ModeControl.h"
   2          #include "cms8s6990.h"
   3          #include "stdbool.h"
   4          #include "RampConfig.h"
   5          #include "LEDMgmt.h"
   6          #include "Flash.h"
   7          
   8          //ÄÚ²¿Vendor String
   9          code char VenderString[]="XRLite-HyperBoost V1.3 By:Redstoner_35";
  10          
  11          //ÄÚ²¿È«¾Ö
  12          static xdata int CurrentIdx=0;
  13          static xdata u8 CurrentCRC=0;
  14          
  15          //CRC-8¼ÆËã 
  16          static u8 PEC8Check(char *DIN,long Len)
  17          {
  18   1       unsigned char crcbuf=0x00;
  19   1       char i;
  20   1       do
  21   1        {
  22   2        //ÔØÈëÊý¾Ý
  23   2        crcbuf^=*DIN++;
  24   2        //¼ÆËã
  25   2        i=8;
  26   2        for(i=8;i;i--)
  27   2         {
  28   3         if(crcbuf&0x80)crcbuf=(crcbuf<<1)^0x07;//×î¸ßÎ»Îª1£¬×óÒÆÖ®ºóºÍ¶àÏîÊ½XOR
  29   3         else crcbuf<<=1;//×î¸ßÎ»Îª0£¬Ö»ÒÆÎ»²»XOR
  30   3         }
  31   2        }
  32   1       while(--Len);
  33   1       //Êä³ö½á¹û
  34   1       return crcbuf;
  35   1      }
  36          
  37          
  38          //½«´«ÈëµÄÊý¾Ý½øÐÐCRC¼ÆËã
  39          static u8 ROMCheckSumCalc(RampROMImg *ROMData)
  40          {
  41   1        u8 CheckSumResult,result;
  42   1        int Len;
  43   1        //ÏÈ¼ÆËãROM½á¹û
  44   1        CheckSumResult=PEC8Check(ROMData->Data.RampConfig.ByteBuf,sizeof(RampStorDef));
  45   1        result=(u8)ROMData->Data.CheckSum;
  46   1        CheckSumResult^=VenderString[result%(sizeof(VenderString)-1)]; //¸ù¾ÝchecksumÄÚÈÝ´ÓVendor StringÀïÃæËæ»úÈ
             -¡Ò»¸ö×Ö·û
  47   1        //´ÓDataFlashÄÚ¶ÁÈ¡¹öÂë
  48   1        for(Len=RollCodeStart;Len<RollCodeEnd;Len++)
  49   1          {
  50   2          Flash_Operation(PROM_Read,Len,&result);
  51   2          CheckSumResult^=result;
  52   2          }
  53   1        //¼ÆËãÍê±Ï·µ»Ø½á¹û
C51 COMPILER V9.60.0.0   RAMPCONFIG                                                        04/05/2025 19:57:21 PAGE 2   

  54   1        return CheckSumResult;
  55   1      }
  56          
  57          //´ÓEEPROMÄÚÑ°ÕÒ×îºóµÄÒ»×éRampÅäÖÃ
  58          static int SearchRampConfig(RampROMImg *ROMData)
  59            {
  60   1        char i;
  61   1        int Len=0;
  62   1        //½âËøflash²¢¿ªÊ¼¶ÁÈ¡
  63   1        SetFlashState(1);
  64   1        do
  65   1          {   
  66   2          for(i=0;i<sizeof(RampROMImageDef);i++)Flash_Operation(DataFlash_Read,i+(Len*sizeof(RampROMImg)),&ROMData
             -->ByteBuf[i]); //´ÓROMÄÚ¶ÁÈ¡Êý¾Ý
  67   2          if(ROMData->Data.CheckSum!=ROMCheckSumCalc(ROMData))break; //ÕÒµ½ÁËÃ»ÓÐ±»Ð´ÈëCRCÐ£Ñé²»¹ýµÄµØ·½£¬¾ÍÊÇÄãÁË
  68   2          Len++;
  69   2          }
  70   1        while(Len<RampCfgGroupLen);
  71   1        //¶ÁÈ¡ÉÏÒ»×éÕýÈ·µÄÅäÖÃ
  72   1        if(Len>0)Len--;
  73   1        for(i=0;i<sizeof(RampROMImageDef);i++)Flash_Operation(DataFlash_Read,i+(Len*sizeof(RampROMImg)),&ROMData-
             ->ByteBuf[i]);
  74   1        //¶ÁÈ¡½áÊø£¬·µ»ØÉÏÒ»×éÓÐÊý¾ÝµÄindex
  75   1        return Len;
  76   1        }
  77          
  78          //¶ÁÈ¡ÎÞ¼«µ÷¹âÅäÖÃ
  79          void ReadRampConfig(void)
  80            {
  81   1        extern code ModeStrDef ModeSettings[ModeTotalDepth];
  82   1        RampROMImg ROMData;
  83   1        //¶ÁÈ¡Êý¾Ý
  84   1        CurrentIdx=SearchRampConfig(&ROMData);
  85   1        //½øÐÐ¶Á³öÊý¾ÝµÄÐ£Ñé
  86   1        if(ROMData.Data.CheckSum!=ROMCheckSumCalc(&ROMData))
  87   1          {
  88   2          //Ð£Ñé³É¹¦£¬¼ÓÔØÊý¾Ý
  89   2          RampCfg.Current=ROMData.Data.RampConfig.Data.RampCurrent;
  90   2          IsRampEnabled=ROMData.Data.RampConfig.Data.IsRampEnabled?1:0;
  91   2          //´æ´¢µ±Ç°µÄindexÖµ
  92   2          CurrentCRC=ROMData.Data.CheckSum;
  93   2          CurrentIdx++; //µ±Ç°Î»ÖÃÓÐÊý¾Ý£¬ÐèÒªÈÃindex+1ÒÆ¶¯µ½Î´Ð´ÈëµÄÎ»ÖÃ
  94   2          }
  95   1        //Ð£ÑéÊ§°ÜÖØ½¨Êý¾Ý
  96   1        else 
  97   1          {
  98   2          RestoreToMinimumRampCurrent();
  99   2          IsRampEnabled=0; //Ä¬ÈÏÎªµ²Î»Ä£Ê½
 100   2          SaveRampConfig(1); //ÖØ½¨Êý¾ÝºóÁ¢¼´±£´æ²ÎÊý
 101   2          }
 102   1        //¶ÁÈ¡²Ù×÷Íê±Ï£¬Ëø¶¨flash 
 103   1        SetFlashState(0);
 104   1        }
 105          
 106          //»Ö¸´µ½ÎÞ¼«µ÷¹âÄ£Ê½µÄ×îµÍµçÁ÷
 107          void RestoreToMinimumRampCurrent(void)  
 108            {
 109   1        char i;
 110   1        extern code ModeStrDef ModeSettings[ModeTotalDepth];
 111   1        RampCfg.Current=800;
 112   1        for(i=0;i<ModeTotalDepth;i++)if(ModeSettings[i].ModeIdx==Mode_Ramp)
 113   1            RampCfg.Current=ModeSettings[i].MinCurrent; //ÕÒµ½µ²Î»Êý¾ÝÖÐÎÞ¼«µ÷¹âµÄµ²Î»
C51 COMPILER V9.60.0.0   RAMPCONFIG                                                        04/05/2025 19:57:21 PAGE 3   

 114   1        }
 115          
 116          //±£´æÎÞ¼«µ÷¹âÅäÖÃ
 117          void SaveRampConfig(bit IsForceSave)
 118            {
 119   1        char i;
 120   1        RampROMImg SavedData;
 121   1        //½âËøflash£¨CRCÐ£ÑéÄ£¿éÐèÒª¶ÁÈ¡FlashËùÒÔÐèÒª½âËø£©
 122   1        SetFlashState(1);
 123   1        //¿ªÊ¼½øÐÐÊý¾Ý¹¹½¨
 124   1        SavedData.Data.RampConfig.Data.RampCurrent=RampCfg.Current;
 125   1        SavedData.Data.RampConfig.Data.IsRampEnabled=IsRampEnabled?true:false;
 126   1        SavedData.Data.CheckSum=ROMCheckSumCalc(&SavedData); //¼ÆËãCRC
 127   1        //½øÐÐÊý¾Ý±È¶Ô
 128   1        if(!IsForceSave&&SavedData.Data.CheckSum==CurrentCRC)
 129   1          {
 130   2          SetFlashState(0);//¶ÁÈ¡²Ù×÷Íê±Ï£¬Ëø¶¨flash  
 131   2          return; //Ìø¹ý±£´æ²Ù×÷£¬Êý¾ÝÏàÍ¬  
 132   2          }
 133   1        //Êý¾ÝÐèÒª±£´æ£¬¿ªÊ¼¼ì²âÊÇ·ñÐèÒª²Á³ý
 134   1        if(CurrentIdx>=RampCfgGroupLen) 
 135   1          {
 136   2          //Êý¾ÝÒÑ¾­Ð´ÂúÁË£¬¶ÔÉÈÇø0ºÍ1½øÐÐÍêÈ«²Á³ý
 137   2          Flash_Operation(DataFlash_Erase,0x200,&i);  //ÉÈÇø2=512-1023
 138   2          Flash_Operation(DataFlash_Erase,0,&i);      //ÉÈÇø1=0-511
 139   2          //´ÓµÚ0¸öÎ»ÖÃ¿ªÊ¼Ð´Èë
 140   2          CurrentIdx=0;
 141   2          }
 142   1        //Ð´ÈëÊý¾Ý
 143   1        for(i=0;i<sizeof(RampROMImageDef);i++)Flash_Operation(DataFlash_Write,i+(CurrentIdx*sizeof(RampROMImg)),&
             -SavedData.ByteBuf[i]);  
 144   1        CurrentIdx++; //±¾indexÒÑ±»Ð´Èë£¬±ê¼ÇÐ´µ½ÏÂ¸öidx
 145   1        CurrentCRC=SavedData.Data.CheckSum; //±£´æ±¾´ÎindexµÄCRC8
 146   1        SetFlashState(0);//Ð´Èë²Ù×÷Íê±Ï£¬Ëø¶¨flash  
 147   1        } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    679    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

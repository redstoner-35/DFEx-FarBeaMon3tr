C51 COMPILER V9.60.0.0   SELFTEST                                                          05/16/2025 12:16:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SELFTEST
OBJECT MODULE PLACED IN .\Objects\SelfTest.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Logic\SelfTest.c OMF2 OPTIMIZE(9,SPEED) BROWSE MODDP2 INCDIR(.\StdDriver
                    -\inc;.\Hardware;.\include\Hardware;.\include\Logic;.\include\Middleware;.\include\System) DEFINE(EnableStdGPIO) DEBUG PR
                    -INT(.\Listings\SelfTest.lst) TABS(2) OBJECT(.\Objects\SelfTest.obj)

line level    source

   1          #include "LEDMgmt.h"
   2          #include "delay.h"
   3          #include "ADCCfg.h"
   4          #include "BattDisplay.h"
   5          #include "ModeControl.h"
   6          #include "SelfTest.h"
   7          #include "OutputChannel.h"
   8          
   9          //内部变量
  10          static xdata int ErrDisplayIndex; //错误显示计时
  11          static xdata char ShortDetectTIM=0; //短路监测计时器
  12          static xdata char ShortBlankTIM; //短路blank定时器
  13          static code FaultCodeDef NonCriticalFault[]={ //非致命的错误代码
  14            Fault_DCDCOpen,
  15            Fault_DCDCShort, //开路和短路可能是误报，允许消除
  16            Fault_InputOVP
  17            };
  18            
  19          //外部全局参考
  20          bit IsInputLimited;  //输入限流触发
  21          xdata FaultCodeDef ErrCode; //错误代码  
  22          
  23          //查询错误是否致命
  24          bit IsErrorFatal(void)  
  25            {
  26   1        char i;
  27   1        for(i=0;i<sizeof(NonCriticalFault);i++)
  28   1          if(NonCriticalFault[i]==ErrCode)return 0;
  29   1        //寻找了目前已有的错误码发现是致命问题
  30   1        return 1;
  31   1        }
  32          
  33          //报告错误
  34          void ReportError(FaultCodeDef Code)
  35            {
  36   1        ErrCode=Code;
  37   1        if(CurrentMode->ModeIdx==Mode_Fault)return;
  38   1        SwitchToGear(Mode_Fault);  //指示故障发生
  39   1        }
  40          
  41          //消除错误
  42          void ClearError(void)
  43            {
  44   1        ErrCode=Fault_None;
  45   1        SwitchToGear(Mode_OFF);
  46   1        }
  47          
  48          //错误ID显示计时函数  
  49          void DisplayErrorTIMHandler(void) 
  50            {
  51   1        //没有错误发生，复位计时器
  52   1        if(ErrCode==Fault_None)ErrDisplayIndex=0;
  53   1        else //发生错误，开始计时
C51 COMPILER V9.60.0.0   SELFTEST                                                          05/16/2025 12:16:07 PAGE 2   

  54   1          {
  55   2          ErrDisplayIndex++;
  56   2          if(ErrDisplayIndex>=(5+(6*(int)ErrCode)+10))ErrDisplayIndex=0; //上限到了，开始翻转
  57   2          }
  58   1        }
  59          
  60          //出现错误时显示DCDC的错误ID
  61          void DisplayErrorIDHandler(void)
  62            {
  63   1        int buf;
  64   1        //先导提示红黄绿交替闪
  65   1        if(ErrDisplayIndex<5)
  66   1          {
  67   2          if(ErrDisplayIndex<3)LEDMode=(LEDStateDef)(ErrDisplayIndex+1);  
  68   2          else LEDMode=LED_OFF;
  69   2          }
  70   1        //闪烁指定次数显示Err ID
  71   1        else if(ErrDisplayIndex<(5+(6*(int)ErrCode)))
  72   1          {
  73   2          buf=(ErrDisplayIndex-5)/3; 
  74   2          if(!(buf%2))LEDMode=LED_Red;
  75   2          else LEDMode=LED_OFF;  //按照错误ID闪烁指定次数
  76   2          }
  77   1        else LEDMode=LED_OFF; //LED熄灭
  78   1        }
  79          //内部函数，故障计数器
  80          static char ErrTIMCounter(char buf,char Count)
  81            {
  82   1        //累加计数器
  83   1        return buf<8?buf+Count:8;
  84   1        }
  85          
  86          //输出故障检测
  87          void OutputFaultDetect(void)
  88            {
  89   1        char buf,OErrID;
  90   1        //输入MPPT限流监测
  91   1        if(Data.FBInjectVolt<0.2&&Data.RawBattVolt<12.0&&Data.OutputVoltage>16)IsInputLimited=1; //电池总电压低于
             -12V，FB注入运放输出拉到负轨且输出大于16V，说明输入限流触发
  92   1        else IsInputLimited=0;
  93   1        //输出故障监测
  94   1        if(!GetIfOutputEnabled())ShortBlankTIM=0; //DCDC关闭
  95   1        else if(ShortBlankTIM<FaultBlankingInterval)ShortBlankTIM++; //时间未到不允许监测
  96   1        else  //开始检测
  97   1          {   
  98   2          buf=ShortDetectTIM&0x0F; //取出定时器值         
  99   2          //输入过压保护
 100   2          if(Data.BatteryVoltage>4.4)ReportError(Fault_InputOVP); 
 101   2          //短路检测  
 102   2          if(Data.OutputVoltage<14.6&&Data.FBInjectVolt>4.8) //输出短路
 103   2            {
 104   3            buf=ErrTIMCounter(buf,2); //计时器累计
 105   3            OErrID=0;
 106   3            }
 107   2          //输出开路检测
 108   2          else if(Data.FBInjectVolt<0.5&&Data.OutputVoltage>22.5) 
 109   2            {
 110   3            buf=ErrTIMCounter(buf,1); //计时器累计
 111   3            OErrID=1;
 112   3            }
 113   2          else buf=buf>0?buf-1:0; //没有发生错误，清除计数器
 114   2          //进行定时器数值的回写
C51 COMPILER V9.60.0.0   SELFTEST                                                          05/16/2025 12:16:07 PAGE 3   

 115   2          ShortDetectTIM=buf|(OErrID<<4);
 116   2          //状态检测
 117   2          if(buf<8)return; //没有故障,跳过执行
 118   2          switch((ShortDetectTIM>>4)&0x0F)  
 119   2            {
 120   3            case 1:ReportError(Fault_DCDCOpen);break;
 121   3            default:ReportError(Fault_DCDCShort);
 122   3            }
 123   2          }
 124   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
